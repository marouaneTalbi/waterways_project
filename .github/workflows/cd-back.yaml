name: CD BACKEND

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
    
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push PHP Docker Image
      run: |
          cd ApiPlatform
          docker build -t ${{ secrets.DOCKER_USERNAME }}/waterways-backend-php -f Dockerfile .
          docker push ${{ secrets.DOCKER_USERNAME }}/waterways-backend-php:latest

    - name: Deploy to EC2 Instance
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }} 
        script: |
          docker network create mynetwork 
          docker volume create shared_data

          docker stop php
          docker rm php
          docker pull ${{ secrets.DOCKER_USERNAME }}/waterways-backend-php:latest
          docker run -d --name php --network=mynetwork -v shared_data:/srv/app/public -p 9000:9000 ${{ secrets.DOCKER_USERNAME }}/waterways-backend-php:latest

          sleep 10 
          

          docker exec php sh -c "rm -f .gitignore && cat <<EOF > .env.local
          APP_ENV=${{ secrets.APP_ENV }}
          APP_SECRET=${{ secrets.APP_SECRET }}
          MAILER_DSN=${{ secrets.MAILER_DSN }}
          CORS_ALLOW_ORIGIN=${{ secrets.CORS_ALLOW_ORIGIN }}
          JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}
          JWT_PUBLIC_KEY=${{ secrets.JWT_PUBLIC_KEY }}
          JWT_PASSPHRASE=${{ secrets.JWT_PASSPHRASE }}
          FRONT_SERVER=${{ secrets.FRONT_SERVER }}
          DATABASE_VERSION=${{ secrets.DATABASE_VERSION }}
          DATABASE_URL=${{ secrets.DATABASE_URL }}
          EOF"
          
          docker exec php composer install
          docker exec php php bin/console lexik:jwt:generate-keypair


